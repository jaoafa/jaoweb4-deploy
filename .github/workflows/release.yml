name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - main
    paths:
      - '.github/workflows/release.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.pull_request.merged == true

    steps:
      - name: Get current date
        id: date
        run: |
          # shellcheck disable=SC2086
          echo "datetime=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT

      - name: Clone jaoafa/jaoweb
        uses: actions/checkout@v2
        with:
          repository: jaoafa/jaoweb

      - name: Remove content
        run: rm -rf content

      - name: Clone jaoafa/jaoweb-docs
        uses: actions/checkout@v2
        with:
          path: content

      - name: Download authors.json & categories.json
        run: |
          wget -O content/blog/authors.json https://raw.githubusercontent.com/jaoafa/jaoweb/master/content/blog/authors.json
          wget -O content/blog/categories.json https://raw.githubusercontent.com/jaoafa/jaoweb/master/content/blog/categories.json

      - uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: |
          # shellcheck disable=SC2086
          echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache node_modules
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn

      - name: Nuxt build
        run: yarn cross-env NUXT_TELEMETRY_DISABLED=1 nuxt build

      - name: Nuxt generate
        run: yarn cross-env NUXT_TELEMETRY_DISABLED=1 nuxt generate

      - name: Check exists dist
        run: |
          ls -la
          test -d dist

      - name: Set jaoweb SHORT_SHA
        id: jaoweb-vars
        run: |
          # shellcheck disable=SC2086
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set jaoweb-docs SHORT_SHA
        id: docs-vars
        working-directory: ./content
        run: |
          # shellcheck disable=SC2086
          echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Print versions
        run: |
          # shellcheck disable=SC2086
          echo "datetime: ${{ steps.date.outputs.datetime }}" > dist/versions.txt
          echo "jaoweb: ${{ steps.jaoweb-vars.outputs.SHORT_SHA }}" >> dist/versions.txt
          echo "jaoweb-docs: ${{ steps.docs-vars.outputs.SHORT_SHA }}" >> dist/versions.txt

      - name: Upload Pages-artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: dist

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1